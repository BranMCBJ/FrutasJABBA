// <auto-generated />
using System;
using FrutasJABBA.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FrutasJABBA.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("FrutasJABBA.Models.Amenidad", b =>
                {
                    b.Property<int>("IDAmenidad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IDAmenidad"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal>("PrecioUnidad")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("StockActual")
                        .HasColumnType("int");

                    b.HasKey("IDAmenidad");

                    b.ToTable("Amenidades");
                });

            modelBuilder.Entity("FrutasJABBA.Models.Cliente", b =>
                {
                    b.Property<int>("IDCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IDCliente"));

                    b.Property<string>("Apellido1")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)");

                    b.Property<string>("Apellido2")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(600)
                        .HasColumnType("varchar(600)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)");

                    b.Property<int>("Pedidos")
                        .HasColumnType("int");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("IDCliente");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("FrutasJABBA.Models.EstadoFruta", b =>
                {
                    b.Property<int>("IDEstado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IDEstado"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)");

                    b.HasKey("IDEstado");

                    b.ToTable("EstadosFrutas");
                });

            modelBuilder.Entity("FrutasJABBA.Models.EstadoPedido", b =>
                {
                    b.Property<int>("IDEstado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IDEstado"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)");

                    b.HasKey("IDEstado");

                    b.ToTable("EstadosPedidos");
                });

            modelBuilder.Entity("FrutasJABBA.Models.Fruta", b =>
                {
                    b.Property<int>("IDFruta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IDFruta"));

                    b.Property<string>("Emoji")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)");

                    b.Property<decimal>("FDU")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("IDEstado")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("PesoActual")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("PesoRequerido")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("PrecioG")
                        .HasColumnType("decimal(10,2)");

                    b.Property<bool>("Variable")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("IDFruta");

                    b.HasIndex("IDEstado");

                    b.ToTable("Frutas");
                });

            modelBuilder.Entity("FrutasJABBA.Models.PaqueteVaso", b =>
                {
                    b.Property<int>("IDPaquete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IDPaquete"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("IDTamano")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecioPaquete")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("IDPaquete");

                    b.HasIndex("IDTamano");

                    b.ToTable("PaquetesVasos");
                });

            modelBuilder.Entity("FrutasJABBA.Models.Pedido", b =>
                {
                    b.Property<int>("IDPedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IDPedido"));

                    b.Property<decimal>("CostoProduccion")
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaEntrega")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IDCliente")
                        .HasColumnType("int");

                    b.Property<int>("IDEstado")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecioVenta")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("IDPedido");

                    b.HasIndex("IDCliente");

                    b.HasIndex("IDEstado");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("FrutasJABBA.Models.PedidoAmenidad", b =>
                {
                    b.Property<int>("IDPedidoAmenidad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IDPedidoAmenidad"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("IDAmenidad")
                        .HasColumnType("int");

                    b.Property<int>("IDPedido")
                        .HasColumnType("int");

                    b.HasKey("IDPedidoAmenidad");

                    b.HasIndex("IDAmenidad");

                    b.HasIndex("IDPedido");

                    b.ToTable("PedidosAmenidades");
                });

            modelBuilder.Entity("FrutasJABBA.Models.Peso", b =>
                {
                    b.Property<int>("IDPseo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IDPseo"));

                    b.Property<int>("IDFruta")
                        .HasColumnType("int");

                    b.Property<int>("IDTamano")
                        .HasColumnType("int");

                    b.Property<decimal>("PesoLeno")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("PorcionMax")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("IDPseo");

                    b.HasIndex("IDFruta");

                    b.HasIndex("IDTamano");

                    b.ToTable("Pesos");
                });

            modelBuilder.Entity("FrutasJABBA.Models.StockFruta", b =>
                {
                    b.Property<int>("IDStock")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IDStock"));

                    b.Property<decimal>("FDU")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("IDFruta")
                        .HasColumnType("int");

                    b.Property<decimal>("PesoTotal")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("PesoUtilizable")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("IDStock");

                    b.HasIndex("IDFruta");

                    b.ToTable("StocksFrutas");
                });

            modelBuilder.Entity("FrutasJABBA.Models.StockVaso", b =>
                {
                    b.Property<int>("IDStock")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IDStock"));

                    b.Property<int>("CantidadActual")
                        .HasColumnType("int");

                    b.Property<int>("CantidadRequerida")
                        .HasColumnType("int");

                    b.Property<int>("IDTamano")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("IDStock");

                    b.HasIndex("IDTamano");

                    b.ToTable("StocksVasos");
                });

            modelBuilder.Entity("FrutasJABBA.Models.TamanoVaso", b =>
                {
                    b.Property<int>("IDTamano")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IDTamano"));

                    b.Property<decimal>("Tamano")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("IDTamano");

                    b.ToTable("TamanosVasos");
                });

            modelBuilder.Entity("FrutasJABBA.Models.Vaso", b =>
                {
                    b.Property<int>("IDVaso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IDVaso"));

                    b.Property<decimal>("CostoProduccion")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("IDPedido")
                        .HasColumnType("int");

                    b.Property<int>("IDTamano")
                        .HasColumnType("int");

                    b.HasKey("IDVaso");

                    b.HasIndex("IDPedido");

                    b.HasIndex("IDTamano");

                    b.ToTable("Vasos");
                });

            modelBuilder.Entity("FrutasJABBA.Models.VasoFruta", b =>
                {
                    b.Property<int>("IDVasoFruta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IDVasoFruta"));

                    b.Property<decimal>("Gramaje")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("IDFruta")
                        .HasColumnType("int");

                    b.Property<int>("IDVaso")
                        .HasColumnType("int");

                    b.HasKey("IDVasoFruta");

                    b.HasIndex("IDFruta");

                    b.HasIndex("IDVaso");

                    b.ToTable("VasosFrutas");
                });

            modelBuilder.Entity("FrutasJABBA.Models.Fruta", b =>
                {
                    b.HasOne("FrutasJABBA.Models.EstadoFruta", "Estado")
                        .WithMany()
                        .HasForeignKey("IDEstado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estado");
                });

            modelBuilder.Entity("FrutasJABBA.Models.PaqueteVaso", b =>
                {
                    b.HasOne("FrutasJABBA.Models.TamanoVaso", "TamanoVaso")
                        .WithMany()
                        .HasForeignKey("IDTamano")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TamanoVaso");
                });

            modelBuilder.Entity("FrutasJABBA.Models.Pedido", b =>
                {
                    b.HasOne("FrutasJABBA.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("IDCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FrutasJABBA.Models.EstadoPedido", "EstadoPedido")
                        .WithMany()
                        .HasForeignKey("IDEstado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("EstadoPedido");
                });

            modelBuilder.Entity("FrutasJABBA.Models.PedidoAmenidad", b =>
                {
                    b.HasOne("FrutasJABBA.Models.Amenidad", "Amenidad")
                        .WithMany()
                        .HasForeignKey("IDAmenidad")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FrutasJABBA.Models.Pedido", "Pedido")
                        .WithMany()
                        .HasForeignKey("IDPedido")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Amenidad");

                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("FrutasJABBA.Models.Peso", b =>
                {
                    b.HasOne("FrutasJABBA.Models.Fruta", "Fruta")
                        .WithMany()
                        .HasForeignKey("IDFruta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FrutasJABBA.Models.TamanoVaso", "TamanoVaso")
                        .WithMany()
                        .HasForeignKey("IDTamano")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fruta");

                    b.Navigation("TamanoVaso");
                });

            modelBuilder.Entity("FrutasJABBA.Models.StockFruta", b =>
                {
                    b.HasOne("FrutasJABBA.Models.Fruta", "Fruta")
                        .WithMany()
                        .HasForeignKey("IDFruta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fruta");
                });

            modelBuilder.Entity("FrutasJABBA.Models.StockVaso", b =>
                {
                    b.HasOne("FrutasJABBA.Models.TamanoVaso", "TamanoVaso")
                        .WithMany()
                        .HasForeignKey("IDTamano")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TamanoVaso");
                });

            modelBuilder.Entity("FrutasJABBA.Models.Vaso", b =>
                {
                    b.HasOne("FrutasJABBA.Models.Pedido", "Pedido")
                        .WithMany()
                        .HasForeignKey("IDPedido")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FrutasJABBA.Models.TamanoVaso", "TamanoVaso")
                        .WithMany()
                        .HasForeignKey("IDTamano")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pedido");

                    b.Navigation("TamanoVaso");
                });

            modelBuilder.Entity("FrutasJABBA.Models.VasoFruta", b =>
                {
                    b.HasOne("FrutasJABBA.Models.Fruta", "Fruta")
                        .WithMany()
                        .HasForeignKey("IDFruta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FrutasJABBA.Models.Vaso", "Vaso")
                        .WithMany()
                        .HasForeignKey("IDVaso")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fruta");

                    b.Navigation("Vaso");
                });
#pragma warning restore 612, 618
        }
    }
}
